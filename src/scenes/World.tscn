[gd_scene load_steps=61 format=2]

[ext_resource path="res://src/characters/Kodo/Battle_Kodo_Tentas.png" type="Texture" id=1]
[ext_resource path="res://src/characters/Kodo/Battle_Kodo.png" type="Texture" id=2]
[ext_resource path="res://src/combat/BVFX_Enari_Ice.png" type="Texture" id=3]
[ext_resource path="res://src/characters/Player/TailSheet.png" type="Texture" id=4]
[ext_resource path="res://src/combat/IceAttack.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/characters/Player/Battle_Player_Sheet.png" type="Texture" id=6]
[ext_resource path="res://src/ui/KeyToPress.tscn" type="PackedScene" id=7]
[ext_resource path="res://src/combat/CombatAction.gd" type="Script" id=8]
[ext_resource path="res://src/textures/BG_Gradient.png" type="Texture" id=9]
[ext_resource path="res://src/textures/BG_Buildings1.png" type="Texture" id=10]
[ext_resource path="res://src/textures/BG_Waves.png" type="Texture" id=11]
[ext_resource path="res://src/combat/CombatSystem.gd" type="Script" id=12]
[ext_resource path="res://src/ui/Battle_Gauges.png" type="Texture" id=13]
[ext_resource path="res://src/ui/Battle_Buttons_Unfocused.png" type="Texture" id=14]
[ext_resource path="res://src/ui/Battle_Buttons.png" type="Texture" id=15]


[sub_resource type="Shader" id=17]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
@retr0_dev
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform float screen_height = 640.0;
uniform float amplitude = 0.045;
uniform float frequency = 16.0;
uniform float speed = 0.20;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform bool enable_palette_cycling = false;
uniform sampler2D palette;
uniform float palette_speed = 0.1;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	vec4 tex = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	float palette_swap = mod(tex.r - TIME * palette_speed, 1.0);
	
	if (enable_palette_cycling)
	{
		COLOR = vec4(texture(palette, vec2(palette_swap, 0)).rgb, tex.a);
	}
	else COLOR = tex;
	//COLOR = mix(vec4(0.0), COLOR, float(int(UV.y * screen_height) % 2));
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 17 )
shader_param/screen_height = 640.0
shader_param/amplitude = 0.045
shader_param/frequency = 16.0
shader_param/speed = 0.2
shader_param/amplitude_vertical = 0.0
shader_param/frequency_vertical = 0.0
shader_param/speed_vertical = 0.0
shader_param/scroll_direction = Vector2( 0, 0 )
shader_param/scrolling_speed = 0.08
shader_param/enable_palette_cycling = false
shader_param/palette_speed = 0.1

[sub_resource type="Shader" id=18]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = 0.8;
uniform float position = 0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 80.0;
uniform float ray2_density = 250.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(0.6, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 18 )
shader_param/angle = 0.8
shader_param/position = 0.2
shader_param/spread = 0.5
shader_param/cutoff = 0.1
shader_param/falloff = 0.2
shader_param/edge_fade = 0.15
shader_param/speed = 1.0
shader_param/ray1_density = 80.0
shader_param/ray2_density = 250.0
shader_param/ray2_intensity = 0.3
shader_param/color = Color( 0.6, 0.9, 0.65, 0.8 )
shader_param/hdr = false
shader_param/seed = 5.0

[sub_resource type="Shader" id=19]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(0.6, 0.9, 0.9, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 19 )
shader_param/angle = -0.3
shader_param/position = -0.2
shader_param/spread = 0.5
shader_param/cutoff = 0.1
shader_param/falloff = 0.2
shader_param/edge_fade = 0.15
shader_param/speed = 1.0
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.3
shader_param/color = Color( 0.6, 0.9, 0.9, 0.8 )
shader_param/hdr = false
shader_param/seed = 5.0

[sub_resource type="CapsuleShape2D" id=20]
radius = 9.5
height = 59.0

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 32.75, 40.5 )

[sub_resource type="AtlasTexture" id=41]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 5120, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=42]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 6144, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=43]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 7168, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=44]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 8192, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=45]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 9216, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=46]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=47]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 1024, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=48]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 2048, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=49]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 3072, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=50]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 4096, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=51]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 5120, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=52]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 6144, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=53]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 7168, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=54]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 8192, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=55]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 9216, 1024, 1024, 1024 )

[sub_resource type="AtlasTexture" id=56]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=57]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 1024, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=58]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 2048, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=59]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 3072, 0, 1024, 1024 )

[sub_resource type="AtlasTexture" id=60]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 4096, 0, 1024, 1024 )

[sub_resource type="SpriteFrames" id=40]
animations = [ {
"frames": [ SubResource( 41 ), SubResource( 42 ), SubResource( 43 ), SubResource( 44 ), SubResource( 45 ), SubResource( 46 ), SubResource( 47 ), SubResource( 48 ), SubResource( 49 ), SubResource( 50 ), SubResource( 51 ), SubResource( 52 ), SubResource( 53 ), SubResource( 54 ), SubResource( 55 ) ],
"loop": false,
"name": "attack",
"speed": 15.0
}, {
"frames": [ SubResource( 56 ), SubResource( 57 ), SubResource( 58 ), SubResource( 59 ), SubResource( 60 ) ],
"loop": true,
"name": "charging",
"speed": 15.0
} ]

[sub_resource type="StyleBoxEmpty" id=26]

[sub_resource type="Theme" id=61]
VScrollBar/styles/scroll = SubResource( 26 )

[sub_resource type="AtlasTexture" id=62]
flags = 4
atlas = ExtResource( 14 )
region = Rect2( 411, 698, 85, 84 )

[sub_resource type="AtlasTexture" id=63]
flags = 4
atlas = ExtResource( 15 )
region = Rect2( 411, 698, 85, 84 )

[sub_resource type="StyleBoxTexture" id=64]
texture = ExtResource( 15 )
region_rect = Rect2( 539, 684, 368, 190 )

[sub_resource type="AtlasTexture" id=65]
flags = 4
atlas = ExtResource( 14 )
region = Rect2( 331, 565, 85, 84 )

[sub_resource type="AtlasTexture" id=66]
flags = 4
atlas = ExtResource( 15 )
region = Rect2( 331, 565, 85, 84 )

[sub_resource type="StyleBoxTexture" id=67]
texture = ExtResource( 15 )
region_rect = Rect2( 539, 684, 368, 190 )

[sub_resource type="AtlasTexture" id=68]
flags = 4
atlas = ExtResource( 14 )
region = Rect2( 477, 563, 85, 84 )

[sub_resource type="AtlasTexture" id=69]
flags = 4
atlas = ExtResource( 15 )
region = Rect2( 477, 563, 85, 84 )

[sub_resource type="AtlasTexture" id=70]
flags = 4
atlas = ExtResource( 14 )
region = Rect2( 411, 698, 85, 84 )

[sub_resource type="AtlasTexture" id=71]
flags = 4
atlas = ExtResource( 15 )
region = Rect2( 411, 698, 85, 84 )

[sub_resource type="AtlasTexture" id=75]
flags = 4
atlas = ExtResource( 15 )
region = Rect2( 440, 337, 145, 125 )

[sub_resource type="StyleBoxFlat" id=72]
bg_color = Color( 1, 0.305882, 0.305882, 1 )

[sub_resource type="StyleBoxFlat" id=73]
bg_color = Color( 0.882353, 0.196078, 0.196078, 1 )

[sub_resource type="StyleBoxFlat" id=74]

[node name="World" type="Node2D"]
position = Vector2( 1, 0 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 511, 312 )
current = true
process_mode = 0
smoothing_enabled = true

[node name="PlayerPosition" type="Position2D" parent="Camera2D"]
position = Vector2( -300, -24 )

[node name="EnemyPosition" type="Position2D" parent="Camera2D"]
position = Vector2( 300, -24 )

[node name="BackgroundLayer" type="CanvasLayer" parent="."]
layer = -10

[node name="Background" type="Node2D" parent="BackgroundLayer"]
position = Vector2( 29, 40 )
scale = Vector2( 27.7343, 11.4687 )
z_index = -10

[node name="Gradient" type="Sprite" parent="BackgroundLayer/Background"]
position = Vector2( 16.6941, 23.9783 )
scale = Vector2( 0.0103668, 0.0242127 )
texture = ExtResource( 9 )

[node name="Waves" type="Sprite" parent="BackgroundLayer/Background"]
material = SubResource( 15 )
position = Vector2( 16.7302, 23.7166 )
scale = Vector2( 0.0116321, 0.0233361 )
texture = ExtResource( 11 )

[node name="GodRays2" type="ColorRect" parent="BackgroundLayer/Background"]
material = SubResource( 12 )
margin_left = -2.19945
margin_top = -3.48774
margin_right = 37.8006
margin_bottom = 36.5123
rect_scale = Vector2( 1.01658, 1.35219 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Buildings1" type="Sprite" parent="BackgroundLayer/Background"]
position = Vector2( 16.8744, 26.594 )
scale = Vector2( 0.0100449, 0.0202109 )
texture = ExtResource( 10 )

[node name="GodRays" type="ColorRect" parent="BackgroundLayer/Background"]
material = SubResource( 10 )
margin_left = -4.1465
margin_top = -4.27248
margin_right = 35.8535
margin_bottom = 35.7275
rect_scale = Vector2( 1.53119, 1.41559 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Player" type="KinematicBody2D" parent="."]
position = Vector2( 207, 296 )
z_index = 1
collision_layer = 2

[node name="Battle" type="Sprite" parent="Player"]
scale = Vector2( 0.3, 0.3 )

[node name="Body" type="Sprite" parent="Player/Battle"]
position = Vector2( 0, -50 )
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 199.838, 180.707, 131.944, 232.155 )

[node name="Head" type="Sprite" parent="Player/Battle/Body"]
position = Vector2( 0, -146.667 )
z_index = 3
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 14.6838, -3.42079, 164.211, 169.474 )

[node name="Ant" type="Sprite" parent="Player/Battle/Body/Head"]
position = Vector2( 40, 13.3333 )
rotation = 0.13698
z_index = -1
texture = ExtResource( 6 )
offset = Vector2( 13.3333, -63.3333 )
region_enabled = true
region_rect = Rect2( 189, 19.45, 47.5, 167.2 )

[node name="Face" type="Sprite" parent="Player/Battle/Body/Head"]
position = Vector2( 26.6667, 23.3334 )
z_index = 1
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 293.5, 52.7, 88.35, 100.7 )

[node name="Arm_1_R" type="Sprite" parent="Player/Battle"]
position = Vector2( -30, -60 )
z_index = 1
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 53.6332, 185.001, 70.5263, 129.474 )

[node name="Arm_2_R" type="Sprite" parent="Player/Battle/Arm_1_R"]
position = Vector2( 6.66667, 23.3333 )
z_index = 2
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( -5.31265, 191.32, 26.3158, 33.6842 )

[node name="Arm_3_R" type="Sprite" parent="Player/Battle/Arm_1_R"]
position = Vector2( -26.6667, 50 )
z_index = 1
texture = ExtResource( 6 )
offset = Vector2( 33.3333, -3.33332 )
region_enabled = true
region_rect = Rect2( 75.74, 319.741, 80, 57.8947 )

[node name="Arm_4_R" type="Sprite" parent="Player/Battle/Arm_1_R/Arm_3_R"]
position = Vector2( 60, 2.86102e-06 )
z_index = -1
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 90.6293, 383.151, 44.7477, 24.5797 )

[node name="Pocket" type="Sprite" parent="Player/Battle"]
position = Vector2( 16.6667, -13.3333 )
z_index = 5
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 336.003, 288.969, 72.0222, 62.0499 )

[node name="Arm_1_L" type="Sprite" parent="Player/Battle"]
position = Vector2( 36.6667, -60 )
z_index = -3
texture = ExtResource( 6 )
flip_h = true
region_enabled = true
region_rect = Rect2( 53.6332, 185.001, 70.5263, 129.474 )

[node name="Arm_2_L" type="Sprite" parent="Player/Battle/Arm_1_L"]
position = Vector2( 3.33331, 30 )
rotation = 1.75327
z_index = 5
texture = ExtResource( 6 )
flip_h = true
region_enabled = true
region_rect = Rect2( -5.31265, 191.32, 26.3158, 33.6842 )

[node name="Arm_3_L" type="Sprite" parent="Player/Battle/Arm_1_L"]
position = Vector2( 26.6667, 53.3333 )
z_index = 4
texture = ExtResource( 6 )
offset = Vector2( -33.2845, -5.08646 )
flip_h = true
region_enabled = true
region_rect = Rect2( 75.74, 319.741, 80, 57.8947 )

[node name="Arm_4_L" type="Sprite" parent="Player/Battle/Arm_1_L/Arm_3_L"]
position = Vector2( -60, -3.33331 )
z_index = -1
texture = ExtResource( 6 )
flip_h = true
region_enabled = true
region_rect = Rect2( 90.6293, 383.151, 44.7477, 24.5797 )

[node name="Tail" type="Sprite" parent="Player/Battle"]
position = Vector2( 6.66667, 303.333 )
z_index = -3
texture = ExtResource( 4 )
hframes = 16
frame = 1
region_enabled = true
region_rect = Rect2( 0, 0, 7648, 649 )

[node name="CollisionBody" type="CollisionShape2D" parent="Player"]
position = Vector2( 1, 0 )
z_index = 1
shape = SubResource( 20 )
__meta__ = {
"_edit_group_": true
}

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="Player"]
remote_path = NodePath("../../Camera2D")
update_position = false

[node name="Enemy_7" type="Area2D" parent="."]
position = Vector2( 815, 296 )
collision_layer = 8
collision_mask = 0

[node name="Battle" type="Sprite" parent="Enemy_7"]
position = Vector2( 2, -11 )
scale = Vector2( 0.4, 0.4 )

[node name="Head" type="Sprite" parent="Enemy_7/Battle"]
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 105.71, -7.39137, 193.829, 247.75 )

[node name="Face" type="Sprite" parent="Enemy_7/Battle/Head"]
position = Vector2( -35, 17.5 )
z_index = 3
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 0, 100, 120.138 )

[node name="Knife" type="Sprite" parent="Enemy_7/Battle"]
position = Vector2( -52.5, 60 )
rotation = 0.636097
z_index = -2
texture = ExtResource( 2 )
offset = Vector2( -75, -7.50001 )
region_enabled = true
region_rect = Rect2( -26.3658, 235.894, 268.421, 167.368 )

[node name="Tentacles" type="Sprite" parent="Enemy_7/Battle"]
position = Vector2( -5, 130 )
texture = ExtResource( 1 )
hframes = 5

[node name="CollisionShape2D" type="CollisionShape2D" parent="Enemy_7"]
position = Vector2( -2.25, 5.5 )
shape = SubResource( 1 )

[node name="IceAttack" type="AnimatedSprite" parent="."]
position = Vector2( 815, 304 )
scale = Vector2( 0.3, 0.3 )
frames = SubResource( 40 )
animation = "attack"
frame = 14
playing = true

[node name="CombatSystem" type="CanvasLayer" parent="."]
script = ExtResource( 12 )
time_limit = 4.0

[node name="CombatUI" type="Control" parent="CombatSystem"]
visible = false
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = 285.0
margin_top = -49.0
margin_right = 325.0
margin_bottom = -9.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Arrow" type="Sprite" parent="CombatSystem/CombatUI"]
position = Vector2( -46, 0 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 15 )
region_enabled = true
region_rect = Rect2( 788, 239, 30, 360 )

[node name="ActionController" type="ScrollContainer" parent="CombatSystem/CombatUI"]
anchor_left = -1.152
anchor_right = -1.152
margin_left = 21.08
margin_top = -21.0
margin_right = 63.08
margin_bottom = 20.0
rect_clip_content = false
theme = SubResource( 61 )
scroll_horizontal_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="CombatSystem/CombatUI/ActionController"]
margin_right = 42.0
margin_bottom = 180.0
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Ice" type="TextureButton" parent="CombatSystem/CombatUI/ActionController/VBoxContainer"]
margin_right = 42.0
margin_bottom = 42.0
rect_min_size = Vector2( 42, 42 )
texture_normal = SubResource( 62 )
texture_focused = SubResource( 63 )
expand = true
stretch_mode = 4
script = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}
action_name = "Ice"
description = "Weaken next enemy's attack "
effort_needed = 5
enemy_damage_modifier = 0.8
animation = ExtResource( 5 )

[node name="InfoBox" type="Panel" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Ice"]
show_behind_parent = true
margin_left = -5.0
margin_top = -5.0
margin_right = 179.0
margin_bottom = 90.0
custom_styles/panel = SubResource( 64 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ActionName" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Ice/InfoBox"]
margin_left = 54.0
margin_top = 6.0
margin_right = 135.0
margin_bottom = 20.0
text = "Action name"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Effort" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Ice/InfoBox"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -90.0
margin_top = 6.0
margin_right = -9.0
margin_bottom = 20.0
text = "Effort"
align = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Ice/InfoBox"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -129.0
margin_top = -67.0
margin_right = -4.0
margin_bottom = -4.0
text = "Description"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Action2" type="TextureButton" parent="CombatSystem/CombatUI/ActionController/VBoxContainer"]
margin_top = 46.0
margin_right = 42.0
margin_bottom = 88.0
rect_min_size = Vector2( 42, 42 )
texture_normal = SubResource( 65 )
texture_focused = SubResource( 66 )
expand = true
stretch_mode = 4
script = ExtResource( 8 )

[node name="InfoBox" type="Panel" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action2"]
show_behind_parent = true
margin_left = -5.0
margin_top = -5.0
margin_right = 179.0
margin_bottom = 90.0
custom_styles/panel = SubResource( 67 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ActionName" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action2/InfoBox"]
margin_left = 54.0
margin_top = 6.0
margin_right = 135.0
margin_bottom = 20.0
text = "Action name"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Effort" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action2/InfoBox"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -90.0
margin_top = 6.0
margin_right = -9.0
margin_bottom = 20.0
text = "Effort"
align = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action2/InfoBox"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -129.0
margin_top = -67.0
margin_right = -4.0
margin_bottom = -4.0
text = "Description"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Action3" type="TextureButton" parent="CombatSystem/CombatUI/ActionController/VBoxContainer"]
margin_top = 92.0
margin_right = 42.0
margin_bottom = 134.0
rect_min_size = Vector2( 42, 42 )
texture_normal = SubResource( 68 )
texture_focused = SubResource( 69 )
expand = true
stretch_mode = 4
script = ExtResource( 8 )

[node name="InfoBox" type="Panel" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action3"]
show_behind_parent = true
margin_left = -5.0
margin_top = -5.0
margin_right = 179.0
margin_bottom = 90.0
custom_styles/panel = SubResource( 67 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ActionName" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action3/InfoBox"]
margin_left = 54.0
margin_top = 6.0
margin_right = 135.0
margin_bottom = 20.0
text = "Action name"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Effort" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action3/InfoBox"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -90.0
margin_top = 6.0
margin_right = -9.0
margin_bottom = 20.0
text = "Effort"
align = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action3/InfoBox"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -129.0
margin_top = -67.0
margin_right = -4.0
margin_bottom = -4.0
text = "Description"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Action5" type="TextureButton" parent="CombatSystem/CombatUI/ActionController/VBoxContainer"]
margin_top = 138.0
margin_right = 42.0
margin_bottom = 180.0
rect_min_size = Vector2( 42, 42 )
texture_normal = SubResource( 70 )
texture_focused = SubResource( 71 )
expand = true
stretch_mode = 4
script = ExtResource( 8 )

[node name="InfoBox" type="Panel" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action5"]
show_behind_parent = true
margin_left = -5.0
margin_top = -5.0
margin_right = 179.0
margin_bottom = 90.0
custom_styles/panel = SubResource( 67 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ActionName" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action5/InfoBox"]
margin_left = 54.0
margin_top = 6.0
margin_right = 135.0
margin_bottom = 20.0
text = "Action name"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Effort" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action5/InfoBox"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -90.0
margin_top = 6.0
margin_right = -9.0
margin_bottom = 20.0
text = "Effort"
align = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="Label" parent="CombatSystem/CombatUI/ActionController/VBoxContainer/Action5/InfoBox"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -129.0
margin_top = -67.0
margin_right = -4.0
margin_bottom = -4.0
text = "Description"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Keys" type="Control" parent="CombatSystem"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.0
margin_top = -20.0
margin_right = 20.0
margin_bottom = 20.0
__meta__ = {
"_edit_group_": true
}

[node name="KeyToPress" parent="CombatSystem/Keys" instance=ExtResource( 7 )]

[node name="KeyIndicator" type="TextureRect" parent="CombatSystem"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.0
margin_top = 44.0
margin_right = 20.0
margin_bottom = 84.0
texture = SubResource( 75 )
expand = true
stretch_mode = 5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ProgressBar" type="ProgressBar" parent="CombatSystem"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -88.0
margin_top = 100.0
margin_right = 88.0
margin_bottom = 114.0
custom_styles/fg = SubResource( 72 )
value = 100.0
percent_visible = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="CombatSystem"]

[node name="EnemyHealth" type="Sprite" parent="CombatSystem"]
position = Vector2( 888, 169 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 13 )
region_enabled = true
region_rect = Rect2( 312, 368, 366, 149 )

[node name="ProgressBar" type="ProgressBar" parent="CombatSystem/EnemyHealth"]
show_behind_parent = true
margin_left = -60.0
margin_top = -53.0
margin_right = 167.0
margin_bottom = 7.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_styles/fg = SubResource( 73 )
custom_styles/bg = SubResource( 74 )
value = 100.0
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="tween_completed" from="CombatSystem/Tween" to="CombatSystem" method="_on_tween_completed"]
